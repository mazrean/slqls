name: CI

on:
  push:
    branches:
      - "main"
  pull_request:

env:
  APP_NAME: slqls

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --snapshot --rm-dist
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: assets
          path: ./dist/*
  test-race:
    name: Test(Race Detector)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go test ./... -v -coverprofile=./coverage.txt -race -vet=off
      - uses: actions/upload-artifact@v4
        with:
          name: coverage.txt
          path: coverage.txt
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go test ./... -v -coverprofile=./coverage.txt -vet=off
      - name: Upload coverage data
        uses: codecov/codecov-action@v4.0.1
        with:
          file: ./coverage.txt
      - uses: actions/upload-artifact@v4
        with:
          name: coverage.txt
          path: coverage.txt
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2.5
        with:
          go_version_file: go.mod
          reporter: github-pr-check
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_error: true
  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go generate ./...
      - run: git diff --exit-code
